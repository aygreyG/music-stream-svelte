name: Publish Docker image to Docker Hub & Deploy on server

on:
  push:
    branches:
      - 'main'
      - 'dev'

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.version }}
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write
      checks: write
      actions: write
      statuses: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Run semantic-release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm exec semantic-release --dry-run

      - name: Version
        run: echo "Next version is ${{ steps.release.outputs.version }}"

  push_to_registry:
    name: Build and Push Docker image
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/svelte-music-stream
          tags: |
            type=raw,value=${{ needs.release.outputs.version }}
            type=sha,prefix=${{ github.ref == 'refs/heads/main' && '' || 'dev-' }}
            type=raw,value=${{ github.ref == 'refs/heads/main' && 'latest' || 'dev-latest' }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  deploy:
    name: Deploying on server
    runs-on: ubuntu-latest
    needs: [release, push_to_registry]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Deploy docker container webhook
        uses: joelwmale/webhook-action@master
        with:
          url: ${{ secrets.WEBHOOK_URL }}
          body: '{ "tag": "${{ needs.release.outputs.version }}", "token": "${{ secrets.WEBHOOK_TOKEN }}" }'
